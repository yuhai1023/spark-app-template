<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE log4j:configuration PUBLIC "-//APACHE//DTD LOG4J 1.2//EN"
        "http://logging.apache.org/log4j/1.2/apidocs/org/apache/log4j/xml/doc-files/log4j.dtd" >
<log4j:configuration xmlns:log4j="http://jakarta.apache.org/log4j/" threshold="info" debug="false">
    <!-- ========================== 自定义输出格式说明================================ -->
    <!-- %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL -->
    <!-- %r 输出自应用启动到输出该log信息耗费的毫秒数  -->
    <!-- %c 输出所属的类目，通常就是所在类的全名 -->
    <!-- %t 输出产生该日志事件的线程名 -->
    <!-- %n 输出一个回车换行符，Windows平台为“/r/n”，Unix平台为“/n” -->
    <!-- %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy MMM dd HH:mm:ss,SSS}，输出类似：2002年10月18日 22：10：28，921  -->
    <!-- %l 输出日志事件的发生位置，包括类目名、发生的线程，以及在代码中的行数。举例：Testlog4.main(TestLog4.java:10)  -->
    <!-- ========================================================================== -->

    <!-- ========================== 输出方式说明================================ -->
    <!-- Log4j提供的appender有以下几种:  -->
    <!-- org.apache.log4j.ConsoleAppender(控制台),  -->
    <!-- org.apache.log4j.FileAppender(文件),  -->
    <!-- org.apache.log4j.DailyRollingFileAppender(每天产生一个日志文件), -->
    <!-- org.apache.log4j.RollingFileAppender(文件大小到达指定尺寸的时候产生一个新的文件),  -->
    <!-- org.apache.log4j.WriterAppender(将日志信息以流格式发送到任意指定的地方)   -->
    <!-- ========================================================================== -->
    <!--输出方式：输出到控制台-->
    <appender name="console.CONSOLE" class="org.apache.log4j.ConsoleAppender">
        <param name="Target" value="System.out"/>
        <param name="Threshold" value="debug" />
        <!--Threshold是个全局的过滤器，他将把低于所设置的level的信息过滤不显示出来-->
        <layout class="org.apache.log4j.PatternLayout">
            <param name="ConversionPattern" value="[%-5p][%d{yyyy-MM-dd HH:mm:ss,SSS}][%l] :%m%n" />
        </layout>
    </appender>

    <category name="com" additivity="false">
        <priority value="info" />
        <appender-ref ref="console.CONSOLE" />
    </category>

    <!--根默认会自动构建一个 root,输出INFO级别的日志到控制台，供logger继承-->
    <root>
        <priority value ="WARN"/>
        <appender-ref ref="console.CONSOLE" />
    </root>
</log4j:configuration>